{"version":3,"sources":["nasa_logo.png","spinning.gif","components/PhotoDayPhoto/PhotoDayPhoto.js","components/PhotoDayVideo/PhotoDayVideo.js","components/NearEarth/NearEarth.js","components/ImageSearch/ImageSearch.js","components/Mars/Mars.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","PhotoDayPhoto","props","react_default","a","createElement","className","href","img","target","rel","src","alt","title","date","explanation","copyright","PhotoDayVideo","video","frameBorder","allow","allowFullScreen","NearEarth","name","hazardous","magnitude","diameterMilesMax","diameterMilesMin","diameterKiloMax","diameterKiloMin","firstDate","lastDate","jplUrl","ImageSearch","description","id","Mars","rover","sol","camera","App","_useState","useState","_useState2","Object","slicedToArray","photoDay","setPhotoDay","_useState3","_useState4","neo","setNeo","_useState5","_useState6","query","setQuery","_useState7","_useState8","data","setData","_useState9","_useState10","marsPhotos","setMarsPhotos","_useState11","_useState12","setRover","_useState13","_useState14","setSol","_useState15","_useState16","maxSol","setMaxSol","_useState17","_useState18","setCamera","_useState19","_useState20","marsError","setMarsError","_useState21","_useState22","loading","setLoading","findMaxSol","axios","get","concat","process","then","res","photo_manifest","max_sol","useEffect","near_earth_objects","slice","nasaLogo","width","media_type","components_PhotoDayPhoto_PhotoDayPhoto","hdurl","components_PhotoDayVideo_PhotoDayVideo","url","map","object","index","key","designation","components_NearEarth_NearEarth","absolute_magnitude_h","is_potentially_hazardous_asteroid","toString","toUpperCase","nasa_jpl_url","estimated_diameter","miles","estimated_diameter_max","estimated_diameter_min","kilometers","orbital_data","first_observation_date","last_observation_date","onSubmit","event","preventDefault","collection","items","filter","prop","links","nasa_id","date_created","value","onChange","image","components_ImageSearch_ImageSearch","photos","length","type","spinning","photo","components_Mars_Mars","img_src","earth_date","full_name","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8b1245a3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nasa_logo.b44f0cfe.png\";","module.exports = __webpack_public_path__ + \"static/media/spinning.bea2d77d.gif\";","import React from 'react';\nimport \"./PhotoDayPhoto.css\";\n\nconst PhotoDayPhoto = (props) => {\n    return (\n\n        <figure className=\"photoInfo\">\n            <br/>\n            <a href={props.img} target=\"_blank\" rel=\"noopener noreferrer\">\n                <img className=\"apodImg\" src={props.img} alt={props.title}/>\n            </a>\n            <br/>\n            <h3>{props.title}</h3>\n            Date: {props.date}\n            <br/>\n            <br/>\n            {props.explanation}\n            <br/>\n            <br/>\n            Copyright: {props.copyright}\n            <br/>\n            <br/>\n            <a href=\"https://apod.nasa.gov/apod/astropix.html\" target=\"_blank\" rel=\"noopener noreferrer\">Official NASA APOD Page</a>\n            <br/>\n            <a href=\"https://apod.nasa.gov/apod/archivepix.html\" target=\"_blank\" rel=\"noopener noreferrer\">Archive</a>\n        </figure>\n        \n    )\n}\n\nexport default PhotoDayPhoto;","import React from 'react';\nimport \"./PhotoDayVideo.css\";\n\nconst PhotoDayVideo = (props) => {\n    return (\n\n        <figure className=\"videoInfo\">\n            <br/>\n            <iframe src={props.video}\n                frameBorder='0'\n                allow='encrypted-media'\n                allowFullScreen\n                title='video'\n            />\n            <br/>\n            <h3>{props.title}</h3>\n            Date: {props.date}\n            <br/>\n            <br/>\n            {props.explanation}\n            <br/>\n            <br/>\n            Copyright: {props.copyright}\n            <br/>\n            <br/>\n            <a href=\"https://apod.nasa.gov/apod/astropix.html\" target=\"_blank\" rel=\"noopener noreferrer\">Official NASA APOD Page</a>\n            <br/>\n            <a href=\"https://apod.nasa.gov/apod/archivepix.html\" target=\"_blank\" rel=\"noopener noreferrer\">Archive</a>\n        </figure>\n        \n    )\n}\n\nexport default PhotoDayVideo;","import React from 'react';\nimport \"./NearEarth.css\";\n\nconst NearEarth = (props) => {\n    return (\n\n        <figure className=\"nearEarthInfo\">\n            <h3>Name: {props.name}</h3>\n            Hazardous: {props.hazardous}\n            <br/>\n            Absolute magnitude: {props.magnitude}\n            <br/>\n            <br/>\n            Estimated diameter (Miles)\n            <br/>\n            (Max): {props.diameterMilesMax} miles\n            <br/>\n            (Min): {props.diameterMilesMin} miles \n            <br/>\n            <br/>\n            Estimated diameter (Kilometers)\n            <br/>\n            (Max): {props.diameterKiloMax} kilometers\n            <br/>\n            (Min): {props.diameterKiloMin} kilometers\n            <br/>\n            <br/>\n            First observed: {props.firstDate}\n            <br/>\n            Last observed: {props.lastDate}\n            <br/>\n            <br/>\n            JPL URL: <a href={props.jplUrl} target=\"_blank\" rel=\"noopener noreferrer\">{props.jplUrl}</a>\n        </figure>\n        \n    )\n}\n\nexport default NearEarth;","import React from 'react';\nimport \"./ImageSearch.css\";\n\nconst ImageSearch = (props) => {\n    return (\n\n        <figure className=\"imageResultsDiv\">\n            <strong>{props.title}</strong>\n            <br/>\n            <br/>\n            <a href={props.src} target=\"_blank\" rel=\"noopener noreferrer\"><img src={props.src} alt={props.title} className=\"image\"/></a>\n            <br/>\n            Description: {props.description}\n            <br/>\n            Date created: {props.date}\n            <br/>\n            NASA ID: {props.id}\n        </figure>\n\n    )\n}\n\nexport default ImageSearch;","import React from 'react';\nimport \"./Mars.css\";\n\nconst Mars = (props) => {\n    return (\n\n        <figure className=\"marsInfo\">\n            <img className=\"marsPhoto\" src={props.img} alt={props.id}/>\n            <br/>\n            Rover: {props.rover}\n            <br/>\n            Taken: {props.date}\n            <br/>\n            Sol: {props.sol}\n            <br/>\n            Camera: {props.camera}\n        </figure>\n\n    )\n}\n\n\nexport default Mars;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport PhotoDayPhoto from \"./components/PhotoDayPhoto/PhotoDayPhoto\";\nimport PhotoDayVideo from \"./components/PhotoDayVideo/PhotoDayVideo\";\nimport NearEarth from \"./components/NearEarth/NearEarth\";\nimport ImageSearch from \"./components/ImageSearch/ImageSearch\";\nimport Mars from \"./components/Mars/Mars\";\nimport nasaLogo from \"./nasa_logo.png\";\nimport spinning from \"./spinning.gif\";\n\nfunction App() {\n\n    // photo of day\n    const [photoDay, setPhotoDay] = useState([]);\n    // near earth objects\n    const [neo, setNeo] = useState([]);\n    // image search\n    const [query, setQuery] = useState(\"\");\n    const [data, setData] = useState([\n        {\n            \"id\": \"\",\n            \"title\": \"\",\n            \"date\": \"\",\n            \"description\": \"\",\n            \"src\": \"\"\n        }\n    ]);\n    // mars photos\n    const [marsPhotos, setMarsPhotos] = useState([]);\n    const [rover, setRover] = useState(\"\");\n    const [sol, setSol] = useState(\"\");\n    const [maxSol, setMaxSol] = useState(\"\");\n    const [camera, setCamera] = useState(\"\");\n    const [marsError, setMarsError] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    // API calls\n    useEffect(() => {\n        // photo of day\n        axios.get(`https://api.nasa.gov/planetary/apod?api_key=${process.env.REACT_APP_NASA_API}`)\n        .then(res => {\n            setPhotoDay(res.data);\n            // console.log(res.data);\n        });\n        // near-earth objects\n        axios.get(`https://api.nasa.gov/neo/rest/v1/neo/browse?api_key=${process.env.REACT_APP_NASA_API}`)\n        .then(res => {\n            // only save first 3 items in array\n            setNeo(res.data.near_earth_objects.slice(0,3));\n            // console.log(res.data.near_earth_objects.slice(0,3));\n        });\n    }, []);\n    // [] tells it to run just once\n\n    // image search function\n    const imageSearch = () => {\n        axios.get(`https://images-api.nasa.gov/search?q=${query}`)\n        .then(res => {\n            setData(transformImgSearch(res.data.collection.items.slice(0,6)));\n            // console.log(res.data.collection.items.slice(0,6));\n        });\n    };\n\n    // filter image search results to remove no photos\n    function transformImgSearch(props) {\n        return (\n        props.filter(prop => \n            prop.links).map(prop => \n                (\n                    {\n                        \"id\": prop.data[0].nasa_id,\n                        \"title\": prop.data[0].title,\n                        \"date\": prop.data[0].date_created,\n                        \"description\": prop.data[0].description,\n                        \"src\": prop.links[0].href\n                    }\n                )\n            )\n        );\n    }\n\n    // mars photos\n    const marsSearch = () => {\n        setLoading(true);\n        axios.get(`https://api.nasa.gov/mars-photos/api/v1/rovers/${rover}/photos?sol=${sol}&camera=${camera}&api_key=${process.env.REACT_APP_NASA_API}`)\n        .then(res => {\n            setMarsPhotos(res.data.photos.slice(0,24));\n            // console.log(res.data.photos.slice(0,24));\n            if (!marsPhotos.length > 0) {\n                setMarsError(true);\n            }\n        }).then(() => {\n            setLoading(false);\n        })\n    };\n\n    function findMaxSol() {\n        axios.get(`https://api.nasa.gov/mars-photos/api/v1/manifests/${rover}?&api_key=${process.env.REACT_APP_NASA_API}`)\n        .then(res => {\n            setMaxSol(res.data.photo_manifest.max_sol);\n            // console.log(res.data.photo_manifest.max_sol);\n        })\n    }\n\n\n  return (\n    <div className=\"App\" id=\"top\">\n\n        <header className=\"header\">\n            <h1 className=\"masterTitle\"><a href=\"#top\">Exploring the NASA Open API Universe</a></h1>\n            <div className=\"poweredBy\">\n                <div className=\"poweredText\">Powered by</div>\n                \n                <div className=\"logoDiv\">\n                    <a href=\"https://api.nasa.gov/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        <img src={nasaLogo} alt=\"nasa_logo\" width=\"30px\"/>\n                    </a>\n                </div>\n            </div>\n            <nav className=\"navbar\">\n                <a href=\"#photoDayDiv\" id=\"apodNav\">Astronomy Picture of the Day</a>\n                <a href=\"#nearEarthDiv\" id=\"neoNav\">Near-Earth Objects</a>\n                <a href=\"#imageSearchDiv\" id=\"imageNav\">Image Search</a>\n                <a href=\"#marsDiv\" id=\"marsNav\">Mars Rover Image Search</a>\n            </nav>\n        </header>\n\n        {/* photo of day */}\n        <section className=\"photoDayDiv\" id=\"photoDayDiv\">\n            <h1 className=\"photoTitle\">Astronomy Picture of the Day</h1>\n\n\n            {photoDay.media_type === \"image\" && \n            <PhotoDayPhoto \n                copyright={photoDay.copyright}\n                date={photoDay.date}\n                explanation={photoDay.explanation}\n                img={photoDay.hdurl}\n                title={photoDay.title}\n            />\n            }\n\n            {photoDay.media_type === \"video\" && \n            <PhotoDayVideo \n                copyright={photoDay.copyright}\n                date={photoDay.date}\n                explanation={photoDay.explanation}\n                video={photoDay.url}\n                title={photoDay.title}\n            />\n            }\n        </section>\n\n        {/* near earth objects */}\n        <section className=\"nearEarthDiv\" id=\"nearEarthDiv\">\n            <h1 className=\"neoTitle\">Near-Earth Objects</h1>\n\n            {neo.map((object, index) => {\n                return (\n                    <figure className={`neoDiv${index}`} key={object.designation}>\n                        <NearEarth \n                            key={object.designation}\n                            name={object.name}\n                            magnitude={object.absolute_magnitude_h}\n                            hazardous={object.is_potentially_hazardous_asteroid.toString().toUpperCase()}\n                            jplUrl={object.nasa_jpl_url}\n                            diameterMilesMax={object.estimated_diameter.miles.estimated_diameter_max}\n                            diameterMilesMin={object.estimated_diameter.miles.estimated_diameter_min}\n                            diameterKiloMax={object.estimated_diameter.kilometers.estimated_diameter_max}\n                            diameterKiloMin={object.estimated_diameter.kilometers.estimated_diameter_min}\n                            firstDate={object.orbital_data.first_observation_date}\n                            lastDate={object.orbital_data.last_observation_date}\n                        />\n                    </figure>\n                )\n            })}\n        </section>\n\n        {/* image search */}\n        <section className=\"imageSearchDiv\" id=\"imageSearchDiv\">\n            <h1 className=\"searchTitle\">Search the NASA Image Archive</h1>\n            <p>Enter a search term. Returns 6 results if available.</p>\n\n            <form \n                className=\"imageSearchForm\"\n                onSubmit={event => {\n                event.preventDefault();\n                imageSearch();}}>\n                <input \n                    value={query}\n                    onChange={event => {\n                        event.preventDefault();\n                        setQuery(event.target.value);\n                        }}\n                /> \n                <button>Search</button>\n                <br/>\n            </form>\n\n            {query &&\n                data.map(image => {\n                return (\n                    <ImageSearch \n                        key={image.id}\n                        title={image.title}\n                        date={image.date}\n                        description={image.description}\n                        id={image.id}\n                        src={image.src}\n                    />\n                )\n            })}\n\n        </section>\n\n        {/* mars search */}\n        <section className=\"marsDiv\" id=\"marsDiv\">\n            <h1 className=\"marsTitle\">Mars Rover Image Search</h1>\n\n            <div className=\"marsForm\">\n                <form \n                    className=\"selectMarsPhotos\"\n                    onSubmit={event => {\n                        event.preventDefault();\n                        marsSearch();}}>\n\n                    <div>\n                        <select \n                            className=\"roverDropdown\" \n                            value={rover}\n                            onChange={event => {\n                                event.preventDefault();\n                                setRover(event.target.value);\n                                setMaxSol(\"\");\n                            }}>\n                                <option>Select a rover</option>\n                                <option value=\"curiosity\">Curiosity</option>\n                                <option value=\"opportunity\">Opportunity</option>\n                                <option value=\"spirit\">Spirit</option>\n                        </select>\n                    </div>\n\n                    {rover === \"curiosity\" &&\n                        <div>\n                            <select \n                                className=\"cameraDropdown\" \n                                id=\"curiosityCameras\"\n                                value={camera}\n                                onChange={event => {\n                                    event.preventDefault();\n                                    setCamera(event.target.value);\n                                    findMaxSol();\n                                }}>\n                                    <option>Select a camera</option>\n                                    <option value=\"FHAZ\">Front Hazard Avoidance Camera</option>\n                                    <option value=\"RHAZ\">Rear Hazard Avoidance Camera</option>\n                                    <option value=\"MAST\">Mast Camera</option>\n                                    <option value=\"CHEMCAM\">Chemistry and Camera Complex</option>\n                                    <option value=\"NAVCAM\">Navigation Camera</option>\n                            </select>\n                        </div>\n                    }\n\n                    {rover === \"opportunity\" &&\n                        <div>\n                            <select \n                                className=\"cameraDropdown\" \n                                id=\"opportunityCameras\"\n                                value={camera}\n                                onChange={event => {\n                                    event.preventDefault();\n                                    setCamera(event.target.value);\n                                    findMaxSol();\n                                }}>\n                                    <option>Select a camera</option>\n                                    <option value=\"PANCAM\">Panoramic Camera</option>\n                                    <option value=\"NAVCAM\">Navigation Camera</option>\n                            </select>\n                        </div>\n                    }\n\n                    {rover === \"spirit\" &&\n                        <div>\n                            <select \n                                className=\"cameraDropdown\" \n                                id=\"spiritCameras\"\n                                value={camera}\n                                onChange={event => {\n                                    event.preventDefault();\n                                    setCamera(event.target.value);\n                                    findMaxSol();\n                                }}>\n                                    <option>Select a camera</option>\n                                    <option value=\"NAVCAM\">Panoramic Camera</option>\n                                    <option value=\"PANCAM\">Navigation Camera</option>\n                            </select>\n                        </div>\n                    }\n\n                    {maxSol !== \"\" && rover &&\n                        <div>\n                        Enter sol (Mars mission date) between 0 and {maxSol}:\n                        <br/>\n                        <input \n                            type=\"text\"\n                            onChange={event => {\n                            event.preventDefault();\n                            setSol(event.target.value);\n                            }}\n                            >\n                        </input>\n                        <br/>\n                        <button>Search</button>\n\n                    </div>\n                    }\n\n                </form>\n\n                {marsPhotos.length === 0 && marsError === true && \n                    <div className=\"noPhotos\">\n                        No data available for that sol date. Please enter another sol date.\n                    </div>\n                }\n                <br/>\n                {loading === true && <img className=\"spinner\" src={spinning} alt=\"loading\"/>}\n\n            </div>\n\n            {loading === false &&\n            marsPhotos.map((photo, index) => {\n                return (\n                        <Mars \n                            className={`mars${index}`}\n                            img={photo.img_src}\n                            rover={photo.rover.name}\n                            key={photo.id}\n                            date={photo.earth_date}\n                            sol={photo.sol}\n                            camera={photo.camera.full_name}\n                        />\n                    )\n                })\n            }\n\n        </section>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}