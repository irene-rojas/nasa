{"version":3,"sources":["nasa_logo.png","spinning.gif","components/PhotoDayPhoto/PhotoDayPhoto.js","components/PhotoDayVideo/PhotoDayVideo.js","components/ImageSearch/ImageSearch.js","components/Mars/Mars.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PhotoDayPhoto","props","React","createElement","className","href","img","target","rel","src","alt","title","date","explanation","copyright","PhotoDayVideo","video","frameBorder","allow","allowFullScreen","ImageSearch","description","id","Mars","rover","sol","camera","App","photoDay","setPhotoDay","useState","neo","setNeo","query","setQuery","data","setData","marsPhotos","setMarsPhotos","setRover","setSol","maxSol","setMaxSol","setCamera","marsError","setMarsError","loading","setLoading","findMaxSol","axios","get","concat","process","then","res","photo_manifest","max_sol","useEffect","near_earth_objects","slice","style","color","nasaLogo","width","media_type","hdurl","url","onSubmit","event","preventDefault","collection","items","filter","prop","links","map","nasa_id","date_created","value","onChange","image","key","photos","length","type","spinning","photo","index","img_src","name","earth_date","full_name","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.35c73aa4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nasa_logo.b44f0cfe.png\";","module.exports = __webpack_public_path__ + \"static/media/spinning.bea2d77d.gif\";","import React from 'react';\nimport \"./PhotoDayPhoto.css\";\n\nconst PhotoDayPhoto = (props) => {\n    return (\n\n        <figure className=\"photoInfo\">\n            <br/>\n            <a href={props.img} target=\"_blank\" rel=\"noopener noreferrer\">\n                <img className=\"apodImg\" src={props.img} alt={props.title}/>\n            </a>\n            <br/>\n            <h3>{props.title}</h3>\n            Date: {props.date}\n            <br/>\n            <br/>\n            {props.explanation}\n            <br/>\n            <br/>\n            Copyright: {props.copyright}\n            <br/>\n            <br/>\n            <a href=\"https://apod.nasa.gov/apod/astropix.html\" target=\"_blank\" rel=\"noopener noreferrer\">Official NASA APOD Page</a>\n            <br/>\n            <a href=\"https://apod.nasa.gov/apod/archivepix.html\" target=\"_blank\" rel=\"noopener noreferrer\">APOD Archive</a>\n        </figure>\n        \n    )\n}\n\nexport default PhotoDayPhoto;","import React from 'react';\nimport \"./PhotoDayVideo.css\";\n\nconst PhotoDayVideo = (props) => {\n    return (\n\n        <figure className=\"videoInfo\">\n            <br/>\n            <iframe src={props.video}\n                frameBorder='0'\n                allow='encrypted-media'\n                allowFullScreen\n                title='video'\n            />\n            <br/>\n            <h3>{props.title}</h3>\n            Date: {props.date}\n            <br/>\n            <br/>\n            {props.explanation}\n            <br/>\n            <br/>\n            Copyright: {props.copyright}\n            <br/>\n            <br/>\n            <a href=\"https://apod.nasa.gov/apod/astropix.html\" target=\"_blank\" rel=\"noopener noreferrer\">Official NASA APOD Page</a>\n            <br/>\n            <a href=\"https://apod.nasa.gov/apod/archivepix.html\" target=\"_blank\" rel=\"noopener noreferrer\">APOD Archive</a>\n        </figure>\n        \n    )\n}\n\nexport default PhotoDayVideo;","import React from 'react';\nimport \"./ImageSearch.css\";\n\nconst ImageSearch = (props) => {\n    return (\n\n        <figure className=\"imageResultsDiv\">\n            <strong>{props.title}</strong>\n            <br/>\n            <br/>\n            <a href={props.src} target=\"_blank\" rel=\"noopener noreferrer\"><img src={props.src} alt={props.title} className=\"image\"/></a>\n            <br/>\n            Description: {props.description}\n            <br/>\n            Date created: {props.date}\n            <br/>\n            NASA ID: {props.id}\n        </figure>\n\n    )\n}\n\nexport default ImageSearch;","import React from 'react';\nimport \"./Mars.css\";\n\nconst Mars = (props) => {\n    return (\n\n        <figure className=\"marsInfo\">\n            <img className=\"marsPhoto\" src={props.img} alt={props.id}/>\n            <br/>\n            Rover: {props.rover}\n            <br/>\n            Taken: {props.date}\n            <br/>\n            Sol: {props.sol}\n            <br/>\n            Camera: {props.camera}\n        </figure>\n\n    )\n}\n\n\nexport default Mars;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport PhotoDayPhoto from \"./components/PhotoDayPhoto/PhotoDayPhoto\";\nimport PhotoDayVideo from \"./components/PhotoDayVideo/PhotoDayVideo\";\nimport NearEarth from \"./components/NearEarth/NearEarth\";\nimport ImageSearch from \"./components/ImageSearch/ImageSearch\";\nimport Mars from \"./components/Mars/Mars\";\nimport nasaLogo from \"./nasa_logo.png\";\nimport spinning from \"./spinning.gif\";\n\nfunction App() {\n\n    // photo of day\n    const [photoDay, setPhotoDay] = useState([]);\n    // near earth objects\n    const [neo, setNeo] = useState([]);\n    // image search\n    const [query, setQuery] = useState(\"\");\n    const [data, setData] = useState([\n        {\n            \"id\": \"\",\n            \"title\": \"\",\n            \"date\": \"\",\n            \"description\": \"\",\n            \"src\": \"\"\n        }\n    ]);\n    // mars photos\n    const [marsPhotos, setMarsPhotos] = useState([]);\n    const [rover, setRover] = useState(\"\");\n    const [sol, setSol] = useState(\"\");\n    const [maxSol, setMaxSol] = useState(\"\");\n    const [camera, setCamera] = useState(\"\");\n    const [marsError, setMarsError] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    // API calls\n    useEffect(() => {\n        // photo of day\n        axios.get(`https://api.nasa.gov/planetary/apod?api_key=${process.env.REACT_APP_NASA_API}`)\n        .then(res => {\n            setPhotoDay(res.data);\n            // console.log(res.data);\n        });\n        // near-earth objects\n        axios.get(`https://api.nasa.gov/neo/rest/v1/neo/browse?api_key=${process.env.REACT_APP_NASA_API}`)\n        .then(res => {\n            // only save first 3 items in array\n            setNeo(res.data.near_earth_objects.slice(0,3));\n            // console.log(res.data.near_earth_objects.slice(0,3));\n        });\n    }, []);\n    // [] tells it to run just once\n\n    // image search function\n    const imageSearch = () => {\n        axios.get(`https://images-api.nasa.gov/search?q=${query}`)\n        .then(res => {\n            setData(transformImgSearch(res.data.collection.items.slice(0,6)));\n            // console.log(res.data.collection.items.slice(0,6));\n        });\n    };\n\n    // filter image search results to remove no photos\n    function transformImgSearch(props) {\n        return (\n        props.filter(prop => \n            prop.links).map(prop => \n                (\n                    {\n                        \"id\": prop.data[0].nasa_id,\n                        \"title\": prop.data[0].title,\n                        \"date\": prop.data[0].date_created,\n                        \"description\": prop.data[0].description,\n                        \"src\": prop.links[0].href\n                    }\n                )\n            )\n        );\n    }\n\n    // mars photos\n    const marsSearch = () => {\n        setLoading(true);\n        axios.get(`https://api.nasa.gov/mars-photos/api/v1/rovers/${rover}/photos?sol=${sol}&camera=${camera}&api_key=${process.env.REACT_APP_NASA_API}`)\n        .then(res => {\n            setMarsPhotos(res.data.photos.slice(0,24));\n            // console.log(res.data.photos.slice(0,24));\n            if (!marsPhotos.length > 0) {\n                setMarsError(true);\n            }\n        }).then(() => {\n            setLoading(false);\n        })\n    };\n\n    function findMaxSol() {\n        axios.get(`https://api.nasa.gov/mars-photos/api/v1/manifests/${rover}?&api_key=${process.env.REACT_APP_NASA_API}`)\n        .then(res => {\n            setMaxSol(res.data.photo_manifest.max_sol);\n            // console.log(res.data.photo_manifest.max_sol);\n        })\n    }\n\n\n  return (\n    <div className=\"App\" id=\"top\">\n\n        <header className=\"header\">\n            <h1 className=\"masterTitle\"><a href=\"#top\" style={{color: \"white\"}}>Exploring the NASA Open API Universe</a></h1>\n            <div className=\"poweredBy\">\n                <div className=\"poweredText\">Powered by</div>\n                \n                <div className=\"logoDiv\">\n                    <a href=\"https://api.nasa.gov/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        <img src={nasaLogo} alt=\"nasa_logo\" width=\"30px\"/>\n                    </a>\n                </div>\n            </div>\n            <nav className=\"navbar\">\n                <a href=\"#photoDayDiv\" id=\"apodNav\" style={{color: \"white\"}}>Astronomy Picture of the Day</a>\n                {/* <a href=\"#nearEarthDiv\" id=\"neoNav\">Near-Earth Objects</a> */}\n                <a href=\"#imageSearchDiv\" id=\"imageNav\" style={{color: \"white\"}}>Image Search</a>\n                <a href=\"#marsDiv\" id=\"marsNav\" style={{color: \"white\"}}>Mars Rover Image Search</a>\n            </nav>\n        </header>\n\n        {/* photo of day */}\n        <section className=\"photoDayDiv\" id=\"photoDayDiv\">\n            <h1 className=\"photoTitle\">Astronomy Picture of the Day</h1>\n\n\n            {photoDay.media_type === \"image\" && \n            <PhotoDayPhoto \n                copyright={photoDay.copyright}\n                date={photoDay.date}\n                explanation={photoDay.explanation}\n                img={photoDay.hdurl}\n                title={photoDay.title}\n            />\n            }\n\n            {photoDay.media_type === \"video\" && \n            <PhotoDayVideo \n                copyright={photoDay.copyright}\n                date={photoDay.date}\n                explanation={photoDay.explanation}\n                video={photoDay.url}\n                title={photoDay.title}\n            />\n            }\n        </section>\n\n        {/* near earth objects */}\n        {/* <section className=\"nearEarthDiv\" id=\"nearEarthDiv\">\n            <h1 className=\"neoTitle\">Near-Earth Objects</h1>\n\n            {neo.map((object, index) => {\n                return (\n                    <figure className={`neoDiv${index}`} key={object.designation}>\n                        <NearEarth \n                            key={object.designation}\n                            name={object.name}\n                            magnitude={object.absolute_magnitude_h}\n                            hazardous={object.is_potentially_hazardous_asteroid.toString().toUpperCase()}\n                            jplUrl={object.nasa_jpl_url}\n                            diameterMilesMax={object.estimated_diameter.miles.estimated_diameter_max}\n                            diameterMilesMin={object.estimated_diameter.miles.estimated_diameter_min}\n                            diameterKiloMax={object.estimated_diameter.kilometers.estimated_diameter_max}\n                            diameterKiloMin={object.estimated_diameter.kilometers.estimated_diameter_min}\n                            firstDate={object.orbital_data.first_observation_date}\n                            lastDate={object.orbital_data.last_observation_date}\n                        />\n                    </figure>\n                )\n            })}\n        </section> */}\n\n        {/* image search */}\n        <section className=\"imageSearchDiv\" id=\"imageSearchDiv\">\n            <h1 className=\"searchTitle\">Search the NASA Image Archive</h1>\n\n            <form \n                className=\"imageSearchForm\"\n                onSubmit={event => {\n                event.preventDefault();\n                imageSearch();}}>\n                <input \n                    title=\"Image Search\"\n                    value={query}\n                    onChange={event => {\n                        event.preventDefault();\n                        setQuery(event.target.value);\n                        }}\n                /> \n                <button>Search</button>\n                <br/>\n                Returns 6 results if available\n            </form>\n\n            {query &&\n                data.map(image => {\n                return (\n                    <ImageSearch \n                        key={image.id}\n                        title={image.title}\n                        date={image.date}\n                        description={image.description}\n                        id={image.id}\n                        src={image.src}\n                    />\n                )\n            })}\n\n        </section>\n\n        {/* mars search */}\n        <section className=\"marsDiv\" id=\"marsDiv\">\n            <h1 className=\"marsTitle\">Mars Rover Image Search</h1>\n\n            <div className=\"marsForm\">\n                <form \n                    className=\"selectMarsPhotos\"\n                    onSubmit={event => {\n                        event.preventDefault();\n                        marsSearch();}}>\n\n                    <div>\n                        <select \n                            title=\"Select Rover\"\n                            className=\"roverDropdown\" \n                            value={rover}\n                            onChange={event => {\n                                event.preventDefault();\n                                setRover(event.target.value);\n                                setMaxSol(\"\");\n                            }}>\n                                <option>Select a rover</option>\n                                <option value=\"curiosity\">Curiosity</option>\n                                <option value=\"opportunity\">Opportunity</option>\n                                <option value=\"spirit\">Spirit</option>\n                        </select>\n                    </div>\n\n                    {rover === \"curiosity\" &&\n                        <div>\n                            <select \n                                title=\"Select Camera\"\n                                className=\"cameraDropdown\" \n                                id=\"curiosityCameras\"\n                                value={camera}\n                                onChange={event => {\n                                    event.preventDefault();\n                                    setCamera(event.target.value);\n                                    findMaxSol();\n                                }}>\n                                    <option>Select a camera</option>\n                                    <option value=\"FHAZ\">Front Hazard Avoidance Camera</option>\n                                    <option value=\"RHAZ\">Rear Hazard Avoidance Camera</option>\n                                    <option value=\"MAST\">Mast Camera</option>\n                                    <option value=\"CHEMCAM\">Chemistry and Camera Complex</option>\n                                    <option value=\"NAVCAM\">Navigation Camera</option>\n                            </select>\n                        </div>\n                    }\n\n                    {rover === \"opportunity\" &&\n                        <div>\n                            <select \n                                title=\"Select Camera\"\n                                className=\"cameraDropdown\" \n                                id=\"opportunityCameras\"\n                                value={camera}\n                                onChange={event => {\n                                    event.preventDefault();\n                                    setCamera(event.target.value);\n                                    findMaxSol();\n                                }}>\n                                    <option>Select a camera</option>\n                                    <option value=\"PANCAM\">Panoramic Camera</option>\n                                    <option value=\"NAVCAM\">Navigation Camera</option>\n                            </select>\n                        </div>\n                    }\n\n                    {rover === \"spirit\" &&\n                        <div>\n                            <select \n                                title=\"Select Camera\"\n                                className=\"cameraDropdown\" \n                                id=\"spiritCameras\"\n                                value={camera}\n                                onChange={event => {\n                                    event.preventDefault();\n                                    setCamera(event.target.value);\n                                    findMaxSol();\n                                }}>\n                                    <option>Select a camera</option>\n                                    <option value=\"NAVCAM\">Panoramic Camera</option>\n                                    <option value=\"PANCAM\">Navigation Camera</option>\n                            </select>\n                        </div>\n                    }\n\n                    {maxSol !== \"\" && rover &&\n                        <div>\n                        Enter sol (Mars mission date) between 0 and {maxSol}:\n                        <br/>\n                        <input \n                            title=\"Enter sol date\"\n                            type=\"text\"\n                            onChange={event => {\n                            event.preventDefault();\n                            setSol(event.target.value);\n                            }}\n                            >\n                        </input>\n                        <br/>\n                        <button>Search</button>\n\n                    </div>\n                    }\n\n                </form>\n\n                {marsPhotos.length === 0 && marsError === true && \n                    <div className=\"noPhotos\">\n                        No data available for that sol date. Please enter another sol date.\n                    </div>\n                }\n                <br/>\n                {loading === true && <img className=\"spinner\" src={spinning} alt=\"loading\"/>}\n\n            </div>\n\n            {loading === false &&\n            marsPhotos.map((photo, index) => {\n                return (\n                        <Mars \n                            className={`mars${index}`}\n                            img={photo.img_src}\n                            rover={photo.rover.name}\n                            key={photo.id}\n                            date={photo.earth_date}\n                            sol={photo.sol}\n                            camera={photo.camera.full_name}\n                        />\n                    )\n                })\n            }\n\n        </section>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}